q
params
q
params.names
params.methods.sort
params
q
req.params
req
@params
c
q
req.path
req
req.header
req.location
@pattern.match(req.location)
@pattern
param
quit
xit
proc
&proc
instance_eval(&proc)
c
@controller_class.new(req, res)
res
req
@controller_class.new
@controller_class
quit
exit
routes.find {|r| r.matches?(req) }
routes.find
req.path
req
c
req.path
pattern
res
req
q
req.path =~ /sss/
req.path
req.path =~ pattern
re.path =~ pattern
pattern =~ req.path
pattern == req.path
pattern.eql?(req.path)
pattern.eq(req.path)
pattern.q=ey=q(req.path)
pattern.match(req.path)
pattern.methods.sort
req.path.matches?(pattern)
req.path
pattern
http_method
req.request_method
q
@http_method
@pattern
@patterb
ivar
c
req
c
req
c
req
q
y
q
res
q
res
@cookie
q
cookie.class
cookie_val
cookie_hash
res
cookie_str
cookie
quit
req.cookies
q
@cookie.class
@cookie['xyz']
@cookie
c
q
@cookie["xyz"]
@cookie[xyz]
@cookie
q
res
q
@cookie
q
JSON.parse(c).class
JSON.parse(c)
c = req.cookies["_rails_lite_app"]
req.cookies["_rails_lite_app"].deserialize
req.cookies["_rails_lite_app"].class
req.cookies["_rails_lite_app"].to_json
req.cookies["_rails_lite_app"].methods.sort
req.cookies["_rails_lite_app"]
req.cookies["rails_lite_app"]
req.cookies
req[env]
req[@env]
req[:env]
req['env']
req
req[]
req.get_header
req.header
req.methods.sort
req.cooie_hash
req
req.get_cookie
req.cookie
rep.cookies
rep.cookie
req['_rails_lite_app']
req['rails_lite_app']
req
req.to_json
req.to_hash
req
q
self.class.name.underscore
self.class.name
self.class_name
self.name
q
File.read('../views/Gemfile')
File.read('../')
q
res.header['location']
res.header['location'] = 1
res.header
res.methods.sort
res.methods.include?(:set_header)
res.methods.include?(:header=)
res.methods
res
q
c
params
q
params
c
params
q
c
params
